// Generated by view binder compiler. Do not edit!
package com.dicoding.picodiploma.loginwithanimation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.picodiploma.loginwithanimation.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavBar;

  @NonNull
  public final MaterialButton buttonChatForum;

  @NonNull
  public final MaterialButton buttonHomeCheckHealth;

  @NonNull
  public final CardView cvHomeImageContainer;

  @NonNull
  public final CardView cvHomeProfileTab;

  @NonNull
  public final CardView cvHomeTopBar;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final LinearLayout llHomeFeatures;

  @NonNull
  public final LinearLayout llHomeProfile;

  @NonNull
  public final LinearLayout llHomeTopBar;

  @NonNull
  public final TextView tvHomeFeatures;

  @NonNull
  public final MaterialTextView tvHomeTopBar;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavBar, @NonNull MaterialButton buttonChatForum,
      @NonNull MaterialButton buttonHomeCheckHealth, @NonNull CardView cvHomeImageContainer,
      @NonNull CardView cvHomeProfileTab, @NonNull CardView cvHomeTopBar,
      @NonNull ImageView imageView2, @NonNull LinearLayout llHomeFeatures,
      @NonNull LinearLayout llHomeProfile, @NonNull LinearLayout llHomeTopBar,
      @NonNull TextView tvHomeFeatures, @NonNull MaterialTextView tvHomeTopBar) {
    this.rootView = rootView;
    this.bottomNavBar = bottomNavBar;
    this.buttonChatForum = buttonChatForum;
    this.buttonHomeCheckHealth = buttonHomeCheckHealth;
    this.cvHomeImageContainer = cvHomeImageContainer;
    this.cvHomeProfileTab = cvHomeProfileTab;
    this.cvHomeTopBar = cvHomeTopBar;
    this.imageView2 = imageView2;
    this.llHomeFeatures = llHomeFeatures;
    this.llHomeProfile = llHomeProfile;
    this.llHomeTopBar = llHomeTopBar;
    this.tvHomeFeatures = tvHomeFeatures;
    this.tvHomeTopBar = tvHomeTopBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_nav_bar;
      BottomNavigationView bottomNavBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavBar == null) {
        break missingId;
      }

      id = R.id.button_chat_forum;
      MaterialButton buttonChatForum = ViewBindings.findChildViewById(rootView, id);
      if (buttonChatForum == null) {
        break missingId;
      }

      id = R.id.button_home_check_health;
      MaterialButton buttonHomeCheckHealth = ViewBindings.findChildViewById(rootView, id);
      if (buttonHomeCheckHealth == null) {
        break missingId;
      }

      id = R.id.cv_home_image_container;
      CardView cvHomeImageContainer = ViewBindings.findChildViewById(rootView, id);
      if (cvHomeImageContainer == null) {
        break missingId;
      }

      id = R.id.cv_home_profileTab;
      CardView cvHomeProfileTab = ViewBindings.findChildViewById(rootView, id);
      if (cvHomeProfileTab == null) {
        break missingId;
      }

      id = R.id.cv_home_topBar;
      CardView cvHomeTopBar = ViewBindings.findChildViewById(rootView, id);
      if (cvHomeTopBar == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.ll_home_features;
      LinearLayout llHomeFeatures = ViewBindings.findChildViewById(rootView, id);
      if (llHomeFeatures == null) {
        break missingId;
      }

      id = R.id.ll_home_profile;
      LinearLayout llHomeProfile = ViewBindings.findChildViewById(rootView, id);
      if (llHomeProfile == null) {
        break missingId;
      }

      id = R.id.ll_home_topBar;
      LinearLayout llHomeTopBar = ViewBindings.findChildViewById(rootView, id);
      if (llHomeTopBar == null) {
        break missingId;
      }

      id = R.id.tv_home_features;
      TextView tvHomeFeatures = ViewBindings.findChildViewById(rootView, id);
      if (tvHomeFeatures == null) {
        break missingId;
      }

      id = R.id.tv_home_topBar;
      MaterialTextView tvHomeTopBar = ViewBindings.findChildViewById(rootView, id);
      if (tvHomeTopBar == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, bottomNavBar, buttonChatForum,
          buttonHomeCheckHealth, cvHomeImageContainer, cvHomeProfileTab, cvHomeTopBar, imageView2,
          llHomeFeatures, llHomeProfile, llHomeTopBar, tvHomeFeatures, tvHomeTopBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
